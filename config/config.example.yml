## metricServers holds the configuration to connect and expose metrics stored in Elasticsearch, or from existing metrics server.
metricServers:
  - name: elasticsearch-observability-cluster
    serverType: elasticsearch # An elasticsearch metric server serves the metrics stored in an Elasticsearch cluster.
    clientConfig:
      host: https://elasticsearch-es-http.default.svc:9200
      authentication:
        username: elastic
        password: ${PASSWORD} # password should be provided through an env. variable
      tls:
        insecureSkipTLSVerify: true # keep it to false in order to enforce cert. verification.
        # caFile: /mnt/elasticsearch/ca.crt # to be mounted in the container
    ## rename can be used to change the name of the metrics served by this metrics server.
    #rename:
    #  matches: "^(.*)$"
    #  as: "${1}.elasticsearch"
    metricSets: ## metricSets defines the Elasticsearch fields to be exposed to the K8S autoscaling controllers.
      - indices: [ 'metrics-*' ]  # expose all the metrics collected by Agents
      - indices: [ 'metricbeat-*' ]
        fields:
          - patterns: [ '^.*$' ]  # expose all the metrics collected by Beats
          - patterns: [ '^kibana\.stats\.' ] # customize settings for some metrics, like resource association for example.
    #        resources: # not implemented yet
    #          - service.name:
    #              resource: "kibana"
    #          - kubernetes.pod.name:
    #              resource: "pod"
  - name: my-existing-custom-metrics-apiserver
    serverType: custom # To be used to forward metric requests to a server which complies with https://github.com/kubernetes/metrics
    clientConfig:
      host: https://custom-metrics-apiserver.custom-metrics.svc
      ## By default, the metrics adapter inherits the credentials of the ServiceAccount used to run the Pod.
      ## You can change customization settings using the settings below.
      #  authentication:
      #    tokenFile: /run/secrets/kubernetes.io/serviceaccount/token
      tls:
        insecureSkipTLSVerify: true # keep it to false in order to enforce cert. verification.
      #  caFile: /run/secrets/kubernetes.io/serviceaccount/ca.crt