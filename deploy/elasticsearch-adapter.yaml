apiVersion: v1
kind: Namespace
metadata:
  name: elasticsearch-custom-metrics
---
## Default configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-custom-metrics-config
  namespace: elasticsearch-custom-metrics
data:
  config.yml: |-
    ## upstream can be used to reference an existing or third party metric adapter service.
    #upstream:
    #  host: https://custom-metrics-apiserver.custom-metrics.svc
    #  tls:
    #    insecureSkipTLSVerify: true
    ## metricSets defines the Elasticsearch fields to be exposed to the K8S autoscaling controllers.
    ## This section requires ELASTICSEARCH_URL, ELASTICSEARCH_USERNAME and ELASTICSEARCH_PASSWORD to be set as env. variables.
    metricSets:
      - indices: [ 'metricbeat-*' ]
        fields:
          - patterns: [ '^prometheus\.metrics\.' ] # all field matching this pattern are exposed
            labels: [ '^prometheus\.labels\.(.*)' ] # not used yet
          - name: "kibana.stats.load.pod" # Kibana load per Pod
            search: # This is an example of an advanced custom search, calculated using an aggregation.
              metricPath: ".aggregations.custom_name.buckets.[0].pod_load.value" # Path to the metric value.
              timestampPath: ".aggregations.custom_name.buckets.[0].timestamp.value_as_string" # Path to the timestamp.
              body: >
                {
                  "query": {
                    "bool": {
                      "must": [
                        {
                          "match": {
                            "kibana.stats.name": "{{ index .PodSelectors "kibana.k8s.elastic.co/name" }}"
                          }
                        },
                        {
                          "match": {
                            "kubernetes.namespace": "{{ .Namespace }}"
                          }
                        }
                      ],
                      "filter": [
                        {
                          "exists": {
                            "field": "kibana.stats.load"
                          }
                        },
                        {
                          "range": {
                            "@timestamp": {
                              "gte": "now-2m"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "size": 0,
                  "aggs": {
                    "custom_name": {
                      "terms": {
                        "field": "kibana.stats.name"
                      },
                      "aggs": {
                        "pods_count": {
                          "cardinality": {
                            "field": "kubernetes.pod.name"
                          }
                        },
                        "maxLoad": {
                          "max": {
                            "field": "kibana.stats.load"
                          }
                        },
                        "timestamp": {
                          "max": {
                            "field": "@timestamp"
                          }
                        },
                        "pod_load": {
                          "bucket_script": {
                            "buckets_path": {
                              "load": "maxLoad"
                            },
                            "script": "params.load / {{ len .Objects }}"
                          }
                        }
                      }
                    }
                  }
                }
          - patterns: [ '^kibana\.stats\.' ]
    #        resources:
    #          - service.name:
    #              resource: "kibana"
    #          - kubernetes.pod.name:
    #              resource: "pod"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: custom-metrics:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: custom-metrics-apiserver
    namespace: elasticsearch-custom-metrics
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: custom-metrics-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: custom-metrics-apiserver
    namespace: elasticsearch-custom-metrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: custom-metrics-apiserver
  name: custom-metrics-apiserver
  namespace: elasticsearch-custom-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: custom-metrics-apiserver
  template:
    metadata:
      labels:
        app: custom-metrics-apiserver
      name: custom-metrics-apiserver
    spec:
      serviceAccountName: custom-metrics-apiserver
      containers:
        - name: custom-metrics-apiserver
          image: gcr.io/elastic-cloud-dev/michael/elasticsearch-metrics-adapter-amd64:latest
          env:
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: elasticsearch
                  key: username
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch
                  key: password
            - name: ELASTICSEARCH_URL
              valueFrom:
                secretKeyRef:
                  name: elasticsearch
                  key: url
          args:
            - /adapter
            - --secure-port=6443
            - --logtostderr=true
            - --v=3
          ports:
            - containerPort: 6443
              name: https
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: config-volume
              mountPath: /config
            - name: temp-vol
              mountPath: /tmp
      volumes:
        - name: config-volume
          configMap:
            name: elasticsearch-custom-metrics-config
        - name: temp-vol
          emptyDir: {}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: custom-metrics-resource-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: custom-metrics-resource-reader
subjects:
  - kind: ServiceAccount
    name: custom-metrics-apiserver
    namespace: elasticsearch-custom-metrics
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: custom-metrics-apiserver
  namespace: elasticsearch-custom-metrics
---
apiVersion: v1
kind: Service
metadata:
  name: custom-metrics-apiserver
  namespace: elasticsearch-custom-metrics
spec:
  ports:
    - name: https
      port: 443
      targetPort: 6443
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: custom-metrics-apiserver
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.custom.metrics.k8s.io
spec:
  service:
    name: custom-metrics-apiserver
    namespace: elasticsearch-custom-metrics
  group: custom.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta2.custom.metrics.k8s.io
spec:
  service:
    name: custom-metrics-apiserver
    namespace: elasticsearch-custom-metrics
  group: custom.metrics.k8s.io
  version: v1beta2
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 200
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: custom-metrics-server-resources
rules:
  - apiGroups:
      - custom.metrics.k8s.io
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: custom-metrics-resource-reader
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - services
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hpa-controller-custom-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: custom-metrics-server-resources
subjects:
  - kind: ServiceAccount
    name: horizontal-pod-autoscaler
    namespace: kube-system